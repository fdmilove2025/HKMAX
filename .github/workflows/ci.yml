name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: investbuddy_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Set up test database
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: investbuddy_test
        run: |
          python tests/setup_test_db.py

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: investbuddy_test
          OLLAMA_HOST: mock
          OLLAMA_MODEL: mock
          PYTHONPATH: ${{ github.workspace }}/backend
        run: |
          pytest tests/ -v --cov=app

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/htmlcov
          retention-days: 7

  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: |
          npm run lint || {
            echo "Linting failed. Running with --fix to attempt automatic fixes..."
            npm run lint:fix
            exit 1
          }

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Build
        env:
          CI: false
        run: npm run build

      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage
          retention-days: 7
